"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _styles = require("../styles");

var _overrides = require("../helpers/overrides");

var _typography = require("../typography");

var _constants = require("./constants");

var _styledComponents = require("./styled-components");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var FloatingRouteMarker = function FloatingRouteMarker(_ref) {
  var label = _ref.label,
      secondaryLabel = _ref.secondaryLabel,
      StartEnhancer = _ref.startEnhancer,
      EndEnhancer = _ref.endEnhancer,
      _ref$selected = _ref.selected,
      selected = _ref$selected === void 0 ? false : _ref$selected,
      _ref$anchorPosition = _ref.anchorPosition,
      anchorPosition = _ref$anchorPosition === void 0 ? _constants.FLOATING_ROUTE_MARKER_ANCHOR_POSITIONS.topLeft : _ref$anchorPosition,
      _ref$overrides = _ref.overrides,
      overrides = _ref$overrides === void 0 ? {} : _ref$overrides;

  var _useStyletron = (0, _styles.useStyletron)(),
      _useStyletron2 = _slicedToArray(_useStyletron, 2),
      css = _useStyletron2[0],
      theme = _useStyletron2[1];

  var backgroundColor = selected ? theme.colors.backgroundInversePrimary : theme.colors.backgroundPrimary;
  var color = selected ? theme.colors.contentInversePrimary : theme.colors.contentPrimary;
  var secondaryLabelColor = selected ? theme.colors.contentInverseSecondary : theme.colors.contentSecondary;

  var _getOverrides = (0, _overrides.getOverrides)(overrides.Root, _styledComponents.StyledFloatingRouteMarkerRoot),
      _getOverrides2 = _slicedToArray(_getOverrides, 2),
      Root = _getOverrides2[0],
      rootProps = _getOverrides2[1];

  var _getOverrides3 = (0, _overrides.getOverrides)(overrides.IconContainer, _styledComponents.StyledLabelSlot),
      _getOverrides4 = _slicedToArray(_getOverrides3, 2),
      IconContainer = _getOverrides4[0],
      iconContainerProps = _getOverrides4[1];

  var _getOverrides5 = (0, _overrides.getOverrides)(overrides.Label, _typography.LabelMedium),
      _getOverrides6 = _slicedToArray(_getOverrides5, 2),
      PrimaryLabel = _getOverrides6[0],
      primaryLabelProps = _getOverrides6[1];

  var _getOverrides7 = (0, _overrides.getOverrides)(overrides.SecondaryLabel, _typography.LabelSmall),
      _getOverrides8 = _slicedToArray(_getOverrides7, 2),
      SecondaryLabel = _getOverrides8[0],
      secondaryLabelProps = _getOverrides8[1];

  var _getOverrides9 = (0, _overrides.getOverrides)(overrides.Pointer, _styledComponents.StyledFloatingRouteMarkerPointer),
      _getOverrides10 = _slicedToArray(_getOverrides9, 2),
      Pointer = _getOverrides10[0],
      pointerProps = _getOverrides10[1];

  var _getOverrides11 = (0, _overrides.getOverrides)(overrides.PointerContainer, _styledComponents.StyledFloatingRouteMarkerPointerContainer),
      _getOverrides12 = _slicedToArray(_getOverrides11, 2),
      PointerContainer = _getOverrides12[0],
      pointerContainerProps = _getOverrides12[1];

  var size = _constants.PINHEAD_SIZES_SHAPES.medium;
  var icon = _constants.PINHEAD_DIMENSIONS[size].icon;
  var activeElements = [label, StartEnhancer, EndEnhancer].filter(function (x) {
    return x;
  });
  var gridTemplateColumns = activeElements.map(function () {
    return 'auto';
  }).join(' ');
  return /*#__PURE__*/React.createElement(Root, _extends({
    "data-baseweb": "floating-route-map-marker",
    $background: backgroundColor,
    $gridTemplateColumns: gridTemplateColumns
  }, rootProps), StartEnhancer && /*#__PURE__*/React.createElement(IconContainer, _extends({
    $color: color,
    $size: size
  }, iconContainerProps), /*#__PURE__*/React.createElement(StartEnhancer, {
    size: icon
  })), label && /*#__PURE__*/React.createElement("div", {
    className: css({
      display: 'flex',
      flexDirection: 'column'
    })
  }, /*#__PURE__*/React.createElement(PrimaryLabel, _extends({
    $color: color
  }, primaryLabelProps), label), /*#__PURE__*/React.createElement(SecondaryLabel, _extends({
    $color: secondaryLabelColor
  }, secondaryLabelProps), secondaryLabel)), EndEnhancer && /*#__PURE__*/React.createElement(IconContainer, _extends({
    $color: color,
    $size: size
  }, iconContainerProps), /*#__PURE__*/React.createElement(EndEnhancer, {
    size: icon
  })), /*#__PURE__*/React.createElement(PointerContainer, _extends({
    $position: anchorPosition,
    xmlns: "http://www.w3.org/2000/svg"
  }, _constants.FLOATING_ROUTE_MARKER_POINTER_TYPE_WRAPPER_SIZES[_constants.FLOATING_ROUTE_MARKER_POINTERS[anchorPosition].type], pointerContainerProps), /*#__PURE__*/React.createElement(Pointer, _extends({
    d: _constants.FLOATING_ROUTE_MARKER_POINTERS[anchorPosition].path,
    $background: backgroundColor
  }, pointerProps))));
};

var _default = FloatingRouteMarker;
exports.default = _default;