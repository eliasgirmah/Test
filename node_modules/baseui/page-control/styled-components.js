"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledRoot = exports.StyledDot = void 0;

var _styles = require("../styles");

var _constants = require("./constants");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var StyledRoot = (0, _styles.styled)('div', function (_ref) {
  var $kind = _ref.$kind,
      $theme = _ref.$theme;
  return {
    display: 'flex',
    alignItems: 'center',
    gap: $theme.sizing.scale300,
    width: 'fit-content',
    paddingTop: $theme.sizing.scale100,
    paddingRight: $theme.sizing.scale500,
    paddingBottom: $theme.sizing.scale100,
    paddingLeft: $theme.sizing.scale500,
    borderRadius: $theme.borders.radius500,
    backgroundColor: $kind === _constants.KIND.backgroundProtection ? $theme.colors.backgroundPrimary : 'transparent'
  };
});
exports.StyledRoot = StyledRoot;
StyledRoot.displayName = "StyledRoot";
StyledRoot.displayName = 'StyledRoot';
var StyledDot = (0, _styles.styled)('input', function (_ref2) {
  var _sizes, _colors;

  var $active = _ref2.$active,
      $kind = _ref2.$kind,
      $size = _ref2.$size,
      $disabled = _ref2.$disabled,
      $isVisible = _ref2.$isVisible,
      $theme = _ref2.$theme;
  var sizes = (_sizes = {}, _defineProperty(_sizes, _constants.SIZE.large, {
    height: $theme.sizing.scale300,
    width: $theme.sizing.scale300
  }), _defineProperty(_sizes, _constants.SIZE.medium, {
    height: $theme.sizing.scale200,
    width: $theme.sizing.scale200,
    marginTop: '1px',
    marginRight: '1px',
    marginBottom: '1px',
    marginLeft: '1px'
  }), _defineProperty(_sizes, _constants.SIZE.small, {
    height: $theme.sizing.scale100,
    width: $theme.sizing.scale100,
    marginTop: $theme.sizing.scale0,
    marginRight: $theme.sizing.scale0,
    marginBottom: $theme.sizing.scale0,
    marginLeft: $theme.sizing.scale0
  }), _sizes);
  var colors = (_colors = {}, _defineProperty(_colors, _constants.KIND.default, {
    active: $theme.colors.contentPrimary,
    inactive: $theme.colors.backgroundTertiary
  }), _defineProperty(_colors, _constants.KIND.backgroundProtection, {
    active: $theme.colors.contentPrimary,
    inactive: $theme.colors.backgroundTertiary
  }), _defineProperty(_colors, _constants.KIND.inverse, {
    active: $theme.colors.contentInversePrimary,
    inactive: $theme.colors.backgroundInversePrimary
  }), _defineProperty(_colors, _constants.KIND.alwaysLight, {
    active: $theme.colors.contentOnColorInverse,
    inactive: (0, _styles.hexToRgb)($theme.colors.backgroundAlwaysDark, '0.12')
  }), _defineProperty(_colors, _constants.KIND.alwaysDark, {
    active: $theme.colors.contentOnColor,
    inactive: (0, _styles.hexToRgb)($theme.colors.backgroundAlwaysLight, '0.24')
  }), _colors);
  return _objectSpread(_objectSpread({
    // reset default input styles
    appearance: 'none',
    margin: 0
  }, sizes[$size]), {}, {
    borderRadius: '50%',
    backgroundColor: $disabled ? $theme.colors.contentStateDisabled : $active ? colors[$kind].active : colors[$kind].inactive
  }, !$isVisible ? {
    // https://www.nomensa.com/blog/how-improve-web-accessibility-hiding-elements
    border: 0,
    clip: 'rect(1px, 1px, 1px, 1px)',
    height: '1px',
    margin: '-1px',
    overflow: 'hidden',
    padding: 0,
    position: 'absolute',
    width: '1px'
  } : {});
});
exports.StyledDot = StyledDot;
StyledDot.displayName = "StyledDot";
StyledDot.displayName = 'StyledDot';