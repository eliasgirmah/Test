"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Sheet = void 0;

var React = _interopRequireWildcard(require("react"));

var _overrides = require("../helpers/overrides");

var _progressBar = require("../progress-bar");

var _button = require("../button");

var _divider = require("../divider");

var _actionButton = require("./action-button");

var _styledComponents = require("./styled-components");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function renderBodyContent(content) {
  return typeof content === 'function' ? content() : content;
}

function renderActionButtonContent(content, buttonSize) {
  if (typeof content === 'string') {
    return content;
  }

  var Icon = content;
  return /*#__PURE__*/React.createElement(Icon, {
    size: buttonSize === _button.SIZE.compact ? 22 : 26
  });
}

var Sheet = function Sheet(_ref) {
  var children = _ref.children,
      content = _ref.content,
      description = _ref.description,
      _ref$draggable = _ref.draggable,
      draggable = _ref$draggable === void 0 ? false : _ref$draggable,
      leadingAction = _ref.leadingAction,
      _ref$overrides = _ref.overrides,
      overrides = _ref$overrides === void 0 ? {} : _ref$overrides,
      progressBar = _ref.progressBar,
      title = _ref.title,
      topPosition = _ref.topPosition,
      trailingAction = _ref.trailingAction;

  var _getOverrides = (0, _overrides.getOverrides)(overrides.Root, _styledComponents.StyledRoot),
      _getOverrides2 = _slicedToArray(_getOverrides, 2),
      Root = _getOverrides2[0],
      rootProps = _getOverrides2[1];

  var _getOverrides3 = (0, _overrides.getOverrides)(overrides.TopContainer, _styledComponents.StyledTopContainer),
      _getOverrides4 = _slicedToArray(_getOverrides3, 2),
      TopContainer = _getOverrides4[0],
      topContainerProps = _getOverrides4[1];

  var _getOverrides5 = (0, _overrides.getOverrides)(overrides.BottomContainer, _styledComponents.StyledBottomContainer),
      _getOverrides6 = _slicedToArray(_getOverrides5, 2),
      BottomContainer = _getOverrides6[0],
      bottomContainerProps = _getOverrides6[1];

  var _getOverrides7 = (0, _overrides.getOverrides)(overrides.Header, _styledComponents.StyledHeader),
      _getOverrides8 = _slicedToArray(_getOverrides7, 2),
      Header = _getOverrides8[0],
      headerProps = _getOverrides8[1];

  var _getOverrides9 = (0, _overrides.getOverrides)(overrides.Grabber, _styledComponents.StyledGrabber),
      _getOverrides10 = _slicedToArray(_getOverrides9, 2),
      Grabber = _getOverrides10[0],
      grabberProps = _getOverrides10[1];

  var _getOverrides11 = (0, _overrides.getOverrides)(overrides.HeaderGrid, _styledComponents.StyledHeaderGrid),
      _getOverrides12 = _slicedToArray(_getOverrides11, 2),
      HeaderGrid = _getOverrides12[0],
      headerGridProps = _getOverrides12[1];

  var _getOverrides13 = (0, _overrides.getOverrides)(overrides.ActionButton, _actionButton.ActionButton),
      _getOverrides14 = _slicedToArray(_getOverrides13, 2),
      ActionButton = _getOverrides14[0],
      actionButtonProps = _getOverrides14[1];

  var _getOverrides15 = (0, _overrides.getOverrides)(overrides.EmptyDiv, _styledComponents.StyledEmptyDiv),
      _getOverrides16 = _slicedToArray(_getOverrides15, 2),
      EmptyDiv = _getOverrides16[0],
      emptyDivProps = _getOverrides16[1];

  var _getOverrides17 = (0, _overrides.getOverrides)(overrides.HeaderTextContainer, _styledComponents.StyledHeaderTextContainer),
      _getOverrides18 = _slicedToArray(_getOverrides17, 2),
      HeaderTextContainer = _getOverrides18[0],
      HeaderTextContainerProps = _getOverrides18[1];

  var _getOverrides19 = (0, _overrides.getOverrides)(overrides.Title, _styledComponents.StyledTitle),
      _getOverrides20 = _slicedToArray(_getOverrides19, 2),
      Title = _getOverrides20[0],
      titleProps = _getOverrides20[1];

  var _getOverrides21 = (0, _overrides.getOverrides)(overrides.Description, _styledComponents.StyledDescription),
      _getOverrides22 = _slicedToArray(_getOverrides21, 2),
      Description = _getOverrides22[0],
      descriptionProps = _getOverrides22[1];

  var _getOverrides23 = (0, _overrides.getOverrides)(overrides.Divider, _styledComponents.StyledDivider),
      _getOverrides24 = _slicedToArray(_getOverrides23, 2),
      Divider = _getOverrides24[0],
      dividerProps = _getOverrides24[1];

  var _getOverrides25 = (0, _overrides.getOverrides)(overrides.Body, _styledComponents.StyledBody),
      _getOverrides26 = _slicedToArray(_getOverrides25, 2),
      Body = _getOverrides26[0],
      bodyProps = _getOverrides26[1];

  var hasTitle = Boolean(title);
  var hasDescription = Boolean(description);
  var hasLeadingAction = Boolean(leadingAction);
  var hasTrailingAction = Boolean(trailingAction);
  var buttonSize = hasTitle ? _button.SIZE.default : _button.SIZE.compact;
  var shouldDisplayHeader = draggable || hasTitle || hasDescription || hasLeadingAction || hasTrailingAction;
  return /*#__PURE__*/React.createElement(Root, _extends({
    $draggable: draggable
  }, rootProps), /*#__PURE__*/React.createElement(TopContainer, _extends({
    $draggable: draggable,
    $topPosition: topPosition
  }, topContainerProps), children), /*#__PURE__*/React.createElement(BottomContainer, _extends({
    $draggable: draggable,
    $topPosition: topPosition
  }, bottomContainerProps), shouldDisplayHeader && /*#__PURE__*/React.createElement(Header, headerProps, draggable && /*#__PURE__*/React.createElement(Grabber, grabberProps), /*#__PURE__*/React.createElement(HeaderGrid, _extends({
    $hasLeadingAction: hasLeadingAction,
    $hasTrailingAction: hasTrailingAction
  }, headerGridProps), leadingAction && /*#__PURE__*/React.createElement(ActionButton, _extends({
    onClick: leadingAction.onClick,
    "aria-label": leadingAction.label,
    size: buttonSize
  }, actionButtonProps), renderActionButtonContent(leadingAction.renderIcon || leadingAction.label, buttonSize)), trailingAction && !leadingAction && /*#__PURE__*/React.createElement(EmptyDiv, emptyDivProps), (hasTitle || hasDescription) && /*#__PURE__*/React.createElement(HeaderTextContainer, _extends({
    $draggable: draggable,
    $hasTitle: hasTitle,
    $hasDescription: hasDescription
  }, HeaderTextContainerProps), title && /*#__PURE__*/React.createElement(Title, titleProps, title), description && /*#__PURE__*/React.createElement(Description, descriptionProps, description)), trailingAction && /*#__PURE__*/React.createElement(ActionButton, _extends({
    onClick: trailingAction.onClick,
    "aria-label": trailingAction.label,
    size: buttonSize
  }, actionButtonProps), renderActionButtonContent(trailingAction.renderIcon || trailingAction.label, buttonSize)), !trailingAction && leadingAction && /*#__PURE__*/React.createElement(EmptyDiv, emptyDivProps)), progressBar ? /*#__PURE__*/React.createElement(_progressBar.ProgressBar, _extends({
    size: _progressBar.SIZE.small,
    overrides: {
      BarContainer: {
        style: {
          marginTop: 0,
          marginBottom: 0
        }
      }
    }
  }, progressBar)) : /*#__PURE__*/React.createElement(Divider, _extends({
    $size: _divider.SIZE.section
  }, dividerProps))), /*#__PURE__*/React.createElement(Body, bodyProps, renderBodyContent(content))));
};

exports.Sheet = Sheet;
var _default = Sheet;
exports.default = _default;