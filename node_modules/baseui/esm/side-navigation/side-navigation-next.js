var _excluded = ["ListItem"],
    _excluded2 = ["children", "overrides"],
    _excluded3 = ["ListItem"],
    _excluded4 = ["children", "id", "overrides"],
    _excluded5 = ["List", "ListItem"];

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
import React, { createContext, isValidElement, useContext, useEffect, useState } from 'react';
import { useUID } from 'react-uid';
import { getOverrides } from '../helpers/overrides';
import ChevronDown from '../icon/chevron-down';
import ChevronUp from '../icon/chevron-up';
import { styled, useStyletron } from '../styles/index';
var SideNavigationContext = /*#__PURE__*/createContext({
  activeItemId: null
});
var StyledList = styled('ul', function (_ref) {
  var _ref$$open = _ref.$open,
      $open = _ref$$open === void 0 ? true : _ref$$open;
  return {
    display: $open ? 'block' : 'none',
    margin: 0,
    padding: 0
  };
});
StyledList.displayName = "StyledList";
var StyledListItem = styled('li', {
  listStyleType: 'none'
});
StyledListItem.displayName = "StyledListItem";
export function SideNavigation(props) {
  var _props$activeItemId = props.activeItemId,
      activeItemId = _props$activeItemId === void 0 ? null : _props$activeItemId,
      children = props.children,
      _props$overrides = props.overrides,
      overrides = _props$overrides === void 0 ? {} : _props$overrides;

  var _getOverrides = getOverrides(overrides.List, StyledList),
      _getOverrides2 = _slicedToArray(_getOverrides, 2),
      List = _getOverrides2[0],
      listProps = _getOverrides2[1];

  return /*#__PURE__*/React.createElement(SideNavigationContext.Provider, {
    value: {
      activeItemId: activeItemId
    }
  }, /*#__PURE__*/React.createElement(List, listProps, children));
}
var StyledStartWrapper = styled('div', function () {
  return {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'flex-start'
  };
});
StyledStartWrapper.displayName = "StyledStartWrapper";
var StyledEndWrapper = styled('div', function (_ref2) {
  var $theme = _ref2.$theme;
  return {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'flex-end',
    width: $theme.sizing.scale900
  };
});
StyledEndWrapper.displayName = "StyledEndWrapper";
var StyledStartEnhancerWrapper = styled('div', function (_ref3) {
  var $theme = _ref3.$theme;
  return {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'flex-start',
    width: $theme.sizing.scale950
  };
});
StyledStartEnhancerWrapper.displayName = "StyledStartEnhancerWrapper";
var StyledAction = styled('a', function (props) {
  var $active = props.$active,
      $clickable = props.$clickable,
      $disabled = props.$disabled,
      $indent = props.$indent,
      $theme = props.$theme;
  var colors = $theme.colors,
      sizing = $theme.sizing,
      typography = $theme.typography;
  var paddingLeft = parseInt(sizing.scale600) + parseInt(sizing.scale950) * Math.max($indent, 0) + 'px';

  var style = _objectSpread({
    alignItems: 'center',
    background: 'none',
    borderTop: 'none',
    borderRight: 'none',
    borderBottom: 'none',
    borderLeft: $active ? "solid ".concat(sizing.scale100, " ").concat(colors.contentPrimary) : "solid ".concat(sizing.scale100, " transparent"),
    boxShadow: $active ? 'inset 999px 999px 0px rgb(0 0 0 / 8%)' : 'none',
    boxSizing: 'border-box',
    color: !$clickable || $active ? colors.contentPrimary : colors.contentSecondary,
    display: 'flex',
    font: 'inherit',
    justifyContent: 'space-between',
    overflowWrap: 'anywhere',
    paddingTop: sizing.scale550,
    paddingRight: sizing.scale600,
    paddingBottom: sizing.scale550,
    paddingLeft: paddingLeft,
    textDecoration: 'none',
    width: '100%'
  }, typography.LabelMedium);

  if ($clickable) {
    style[':hover'] = {
      boxShadow: 'inset 999px 999px 0px rgb(0 0 0 / 4%)',
      cursor: 'pointer'
    };
  }

  if ($disabled) {
    style.color = colors.contentStateDisabled;
    style.cursor = 'not-allowed';
  }

  return style;
});
StyledAction.displayName = "StyledAction";

function Item(props) {
  var ariaControls = props.ariaControls,
      ariaExpanded = props.ariaExpanded,
      _props$active = props.active,
      active = _props$active === void 0 ? false : _props$active,
      _props$disabled = props.disabled,
      disabled = _props$disabled === void 0 ? false : _props$disabled,
      endEnhancer = props.endEnhancer,
      href = props.href,
      _props$indent = props.indent,
      indent = _props$indent === void 0 ? 0 : _props$indent,
      label = props.label,
      onClick = props.onClick,
      _props$overrides2 = props.overrides,
      overrides = _props$overrides2 === void 0 ? {} : _props$overrides2,
      startEnhancer = props.startEnhancer;

  if (!label) {
    return null;
  }

  var _getOverrides3 = getOverrides(overrides.Action, StyledAction),
      _getOverrides4 = _slicedToArray(_getOverrides3, 2),
      Action = _getOverrides4[0],
      actionProps = _getOverrides4[1];

  var _getOverrides5 = getOverrides(overrides.EndWrapper, StyledEndWrapper),
      _getOverrides6 = _slicedToArray(_getOverrides5, 2),
      EndWrapper = _getOverrides6[0],
      endWrapperProps = _getOverrides6[1];

  var _getOverrides7 = getOverrides(overrides.StartEnhancerWrapper, StyledStartEnhancerWrapper),
      _getOverrides8 = _slicedToArray(_getOverrides7, 2),
      StartEnhancerWrapper = _getOverrides8[0],
      startEnhancerWrapperProps = _getOverrides8[1];

  var _getOverrides9 = getOverrides(overrides.StartWrapper, StyledStartWrapper),
      _getOverrides10 = _slicedToArray(_getOverrides9, 2),
      StartWrapper = _getOverrides10[0],
      startWrapperProps = _getOverrides10[1];

  var clickable = Boolean((onClick || href) && !disabled);
  var actionElement = clickable ? href ? 'a' : 'button' : 'div';
  return /*#__PURE__*/React.createElement(Action, _extends({
    $active: active,
    $as: actionElement,
    $clickable: clickable,
    $disabled: disabled,
    $indent: indent,
    "aria-controls": ariaControls,
    "aria-expanded": ariaExpanded,
    href: href,
    onClick: onClick,
    type: actionElement === 'button' ? 'button' : undefined
  }, actionProps), /*#__PURE__*/React.createElement(StartWrapper, startWrapperProps, startEnhancer && /*#__PURE__*/React.createElement(StartEnhancerWrapper, startEnhancerWrapperProps, startEnhancer), label), endEnhancer && /*#__PURE__*/React.createElement(EndWrapper, endWrapperProps, endEnhancer));
}

export function SideNavigationHeader(_ref4) {
  var children = _ref4.children,
      _ref4$overrides = _ref4.overrides;
  _ref4$overrides = _ref4$overrides === void 0 ? {} : _ref4$overrides;

  var ListItem = _ref4$overrides.ListItem,
      overrides = _objectWithoutProperties(_ref4$overrides, _excluded),
      props = _objectWithoutProperties(_ref4, _excluded2);

  var _getOverrides11 = getOverrides(ListItem, StyledListItem),
      _getOverrides12 = _slicedToArray(_getOverrides11, 2),
      OverridedListItem = _getOverrides12[0],
      listItemProps = _getOverrides12[1];

  return /*#__PURE__*/React.createElement(OverridedListItem, listItemProps, /*#__PURE__*/React.createElement(Item, _extends({}, props, {
    label: children,
    overrides: overrides
  })));
}
export function SideNavigationItem(_ref5) {
  var children = _ref5.children,
      id = _ref5.id,
      _ref5$overrides = _ref5.overrides;
  _ref5$overrides = _ref5$overrides === void 0 ? {} : _ref5$overrides;

  var ListItem = _ref5$overrides.ListItem,
      overrides = _objectWithoutProperties(_ref5$overrides, _excluded3),
      props = _objectWithoutProperties(_ref5, _excluded4);

  var _React$useContext = React.useContext(SideNavigationContext),
      activeItemId = _React$useContext.activeItemId;

  var _getOverrides13 = getOverrides(ListItem, StyledListItem),
      _getOverrides14 = _slicedToArray(_getOverrides13, 2),
      OverridedListItem = _getOverrides14[0],
      listItemProps = _getOverrides14[1];

  return /*#__PURE__*/React.createElement(OverridedListItem, listItemProps, /*#__PURE__*/React.createElement(Item, _extends({}, props, {
    label: children,
    active: activeItemId === id,
    overrides: overrides
  })));
}
export function SideNavigationSection(props) {
  var _props$active2 = props.active,
      active = _props$active2 === void 0 ? false : _props$active2,
      children = props.children,
      _props$forceOpen = props.forceOpen,
      forceOpen = _props$forceOpen === void 0 ? false : _props$forceOpen,
      _props$indent2 = props.indent,
      indent = _props$indent2 === void 0 ? 0 : _props$indent2,
      _props$overrides3 = props.overrides;
  _props$overrides3 = _props$overrides3 === void 0 ? {} : _props$overrides3;

  var List = _props$overrides3.List,
      ListItem = _props$overrides3.ListItem,
      overrides = _objectWithoutProperties(_props$overrides3, _excluded5),
      startEnhancer = props.startEnhancer,
      title = props.title;

  var _useStyletron = useStyletron(),
      _useStyletron2 = _slicedToArray(_useStyletron, 2),
      theme = _useStyletron2[1];

  var _useContext = useContext(SideNavigationContext),
      activeItemId = _useContext.activeItemId;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      open = _useState2[0],
      setOpen = _useState2[1];

  var uid = useUID();
  useEffect(function () {
    var childIsActive = false;

    if (activeItemId != null) {
      var stack = React.Children.toArray(children);

      while (stack.length) {
        var current = stack.pop();

        if ( /*#__PURE__*/isValidElement(current)) {
          if (current.props.id === activeItemId) {
            childIsActive = true;
            break;
          }

          if (current.props.children) {
            stack = stack.concat(React.Children.toArray(current.props.children));
          }
        }
      }
    }

    if (childIsActive) {
      setOpen(true);
    } else {
      setOpen(false);
    }
  }, [activeItemId, children]);
  useEffect(function () {
    if (forceOpen) {
      setOpen(true);
    }
  }, [forceOpen]);

  if (React.Children.toArray(children).filter(React.isValidElement).length === 0) {
    return null;
  }

  var Chevron = open ? ChevronUp : ChevronDown;

  var _getOverrides15 = getOverrides(List, StyledList),
      _getOverrides16 = _slicedToArray(_getOverrides15, 2),
      OverridedList = _getOverrides16[0],
      overridedListProps = _getOverrides16[1];

  var _getOverrides17 = getOverrides(ListItem, StyledListItem),
      _getOverrides18 = _slicedToArray(_getOverrides17, 2),
      OverridedListItem = _getOverrides18[0],
      overridedListItemProps = _getOverrides18[1];

  return /*#__PURE__*/React.createElement(OverridedListItem, overridedListItemProps, /*#__PURE__*/React.createElement(Item, {
    ariaControls: uid,
    ariaExpanded: open,
    endEnhancer: /*#__PURE__*/React.createElement(Chevron, {
      title: "",
      size: theme.sizing.scale800
    }),
    label: title,
    indent: indent,
    onClick: function onClick() {
      return setOpen(function (prev) {
        return !prev;
      });
    },
    overrides: overrides,
    startEnhancer: startEnhancer
  }), /*#__PURE__*/React.createElement(OverridedList, _extends({
    id: uid,
    $open: open
  }, overridedListProps), React.Children.map(children, function (child) {
    return child === null ? null : /*#__PURE__*/React.cloneElement(child, {
      indent: indent + 1
    });
  })));
}