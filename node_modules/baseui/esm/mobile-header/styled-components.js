function _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError("Cannot destructure undefined"); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/*
Copyright (c) Uber Technologies, Inc.
This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
import { styled } from '../styles';
import { TYPE } from './constants';
export var StyledRoot = styled('div', function (_ref) {
  var $theme = _ref.$theme,
      $type = _ref.$type;
  return _objectSpread({
    width: '100%',
    display: 'grid',
    gridTemplateColumns: 'auto 1fr auto',
    gridTemplateRows: '48px'
  }, $type === TYPE.floating ? {
    backgroundColor: 'transparent',
    pointerEvents: 'none'
  } : {
    backgroundColor: $theme.colors.backgroundPrimary
  });
});
StyledRoot.displayName = "StyledRoot";
StyledRoot.displayName = 'StyledRoot';
export var StyledNavContainer = styled('div', function (_ref2) {
  var $hasTextContent = _ref2.$hasTextContent,
      $type = _ref2.$type,
      $theme = _ref2.$theme;
  var floatingPadding = $theme.direction === 'rtl' ? {
    paddingRight: $theme.sizing.scale300
  } : {
    paddingLeft: $theme.sizing.scale300
  };
  return _objectSpread({
    pointerEvents: 'auto',
    minWidth: '48px'
  }, $hasTextContent && $type === TYPE.fixed ? {} : floatingPadding);
});
StyledNavContainer.displayName = "StyledNavContainer";
StyledNavContainer.displayName = 'StyledNavContainer';
export var StyledActionButtonsContainer = styled('div', function (_ref3) {
  _objectDestructuringEmpty(_ref3);

  return {
    display: 'flex',
    justifyContent: 'flex-end',
    gridColumn: '3 / 4',
    pointerEvents: 'auto'
  };
});
StyledActionButtonsContainer.displayName = "StyledActionButtonsContainer";
StyledActionButtonsContainer.displayName = 'StyledActionButtonsContainer';
export var StyledTitle = styled('div', function (_ref4) {
  var $theme = _ref4.$theme,
      _ref4$$expanded = _ref4.$expanded,
      $expanded = _ref4$$expanded === void 0 ? false : _ref4$$expanded;
  return _objectSpread(_objectSpread(_objectSpread({
    alignSelf: 'center',
    justifyContent: 'flex-start'
  }, $expanded ? $theme.typography.DisplayXSmall : $theme.typography.LabelLarge), $expanded ? {
    gridColumn: '1 / 4',
    gridRow: 2,
    paddingLeft: $theme.sizing.scale600
  } : {}), {}, {
    // truncate long titles
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap',
    overflow: 'hidden'
  });
});
StyledTitle.displayName = "StyledTitle";
StyledTitle.displayName = 'StyledTitle';