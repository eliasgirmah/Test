function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
import { withStyle } from '../styles';
import { StyledRoot as StyledBannerRoot, StyledLeadingContent as StyledBannerLeadingContent, StyledMessageContent as StyledBannerMessageContent, StyledTrailingIconButton as StyledBannerTrailingIconButton } from '../banner';
import { getMediaQueryPageMargins, getMinimumPageMargins } from '../helpers/responsive-helpers';
export var StyledRoot = withStyle(StyledBannerRoot, function (_ref) {
  var $isButton = _ref.$isButton,
      $theme = _ref.$theme;
  return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, $isButton ? {
    ':hover': {
      boxShadow: 'inset 999px 999px 0px rgba(0, 0, 0, 0.04)'
    },
    ':active': {
      boxShadow: 'inset 999px 999px 0px rgba(0, 0, 0, 0.08)'
    },
    // button style reset
    '-webkit-appearance': 'none',
    textAlign: 'inherit',
    boxShadow: 'none',
    cursor: 'pointer',
    border: 'none',
    alignItems: 'center'
  } : {}), getMediaQueryPageMargins($theme)), getMinimumPageMargins($theme.grid.margins)), {}, {
    borderRadius: 0,
    margin: 0
  });
});
StyledRoot.displayName = "StyledRoot";
StyledRoot.displayName = 'StyledRoot';
export var StyledLeadingContent = withStyle(StyledBannerLeadingContent, function () {
  return {
    padding: 0
  };
});
StyledLeadingContent.displayName = "StyledLeadingContent";
StyledLeadingContent.displayName = 'StyledLeadingContent';
export var StyledTrailingIconButton = withStyle(StyledBannerTrailingIconButton, function () {
  return {
    ':hover': {
      boxShadow: 'none'
    },
    ':active': {
      boxShadow: 'none'
    }
  };
});
StyledTrailingIconButton.displayName = "StyledTrailingIconButton";
StyledTrailingIconButton.displayName = 'StyledTrailingIconButton';
export var StyledMessageContent = withStyle(StyledBannerMessageContent, function () {
  return {
    // button styles reset
    backgroundColor: 'transparent',
    borderBottomWidth: 0,
    borderLeftWidth: 0,
    borderRightWidth: 0,
    borderTopWidth: 0,
    fontFamily: 'inherit',
    fontSize: 'inherit',
    fontStyle: 'inherit',
    fontWeight: 'inherit',
    lineHeight: 'inherit',
    cursor: 'pointer',
    ':hover': {
      boxShadow: 'inset 999px 999px 0px rgba(0, 0, 0, 0.04)'
    },
    ':active': {
      boxShadow: 'inset 999px 999px 0px rgba(0, 0, 0, 0.08)'
    }
  };
});
StyledMessageContent.displayName = "StyledMessageContent";
StyledMessageContent.displayName = 'StyledMessageContent';